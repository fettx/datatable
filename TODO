BUG: search column count doesn't include unsearchable columns and this
     isn't taken into account.

SECURITY: don't rely on iColumns being meaningful or correct us our internal
          definition of the table to determine the number of columns.  using
          the parameter allows the caller to make our code operate out of
          bounds

#) Provide example of fnRender in the tests for example: It needs to be possible to turn
   a boolean field into 'done' or 'not done'.

#) Need to be able to define default sort ordefault sort orders

#) provide a reset link in so that all the search inputs are cleared
   would be nice if it was easily hooked to a keystroke for example
   ESC when any of the inputs have the focus

#) The place holder text should be the same as the column heading except maybe all lower cased?

#) allow multiple space separated search values in global search the OR the result
   together for each value and each column.  So for example having "alice bob" in the search input
   would generate a where clause like this...

      WHERE (first_name LIKE 'alice' OR first_name LIKE 'bob') OR (other_column LIKE 'alice' OR other_column LIKE 'bob') OR ...

#) make it so both global search and individual column searches
   support typcasting so that those columns can be searched as
   strings, example:

       SELECT order_number FROM orders WHERE CAST(order_number as text) LIKE '%123%';

       column({'orders.order_number' => {:type => :string, :cast => :text }})

   having :cast present would force it to build any where clauses using a type cast

#) rails generator
     add javascript to public/javascripts
     add css for default datatable theme to public/stylesheets
     add template for config/initializer/datatable.rb
     create folder app/datatables/

#) web site, readme, wiki on github

#) release 0.1 (support for rails 3.0)

THE FUTURE
  Move all tests into root directory so there can be multiple versions of the example application
  Rails 3.1
  printing
  download as csv/excel
  search date ranges
  support internationalization (http://www.datatables.net/usage/i18n)
  support callbacks  (http://www.datatables.net/usage/callbacks)
  support all datatable options (http://www.datatables.net/usage/options)
  make config more robust (https://github.com/jnicklas/carrierwave/blob/master/lib/carrierwave/uploader/configuration.rb)
  reordering columns
  lightbox editing
  maybe parse the sql?
  maybe build the sql from the column definitions?
  focus on active relation version



